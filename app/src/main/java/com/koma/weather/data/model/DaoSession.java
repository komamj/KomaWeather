package com.koma.weather.data.model;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.koma.weather.data.model.WeatherModel;
import com.koma.weather.data.model.NowInfo;
import com.koma.weather.data.model.BasicInfo;
import com.koma.weather.data.model.DailyForecastInfo;
import com.koma.weather.data.model.AqiInfo;
import com.koma.weather.data.model.WarningInfo;
import com.koma.weather.data.model.HourlyForecastInfo;
import com.koma.weather.data.model.SuggestionInfo;

import com.koma.weather.data.model.WeatherModelDao;
import com.koma.weather.data.model.NowInfoDao;
import com.koma.weather.data.model.BasicInfoDao;
import com.koma.weather.data.model.DailyForecastInfoDao;
import com.koma.weather.data.model.AqiInfoDao;
import com.koma.weather.data.model.WarningInfoDao;
import com.koma.weather.data.model.HourlyForecastInfoDao;
import com.koma.weather.data.model.SuggestionInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig weatherModelDaoConfig;
    private final DaoConfig nowInfoDaoConfig;
    private final DaoConfig basicInfoDaoConfig;
    private final DaoConfig dailyForecastInfoDaoConfig;
    private final DaoConfig aqiInfoDaoConfig;
    private final DaoConfig warningInfoDaoConfig;
    private final DaoConfig hourlyForecastInfoDaoConfig;
    private final DaoConfig suggestionInfoDaoConfig;

    private final WeatherModelDao weatherModelDao;
    private final NowInfoDao nowInfoDao;
    private final BasicInfoDao basicInfoDao;
    private final DailyForecastInfoDao dailyForecastInfoDao;
    private final AqiInfoDao aqiInfoDao;
    private final WarningInfoDao warningInfoDao;
    private final HourlyForecastInfoDao hourlyForecastInfoDao;
    private final SuggestionInfoDao suggestionInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        weatherModelDaoConfig = daoConfigMap.get(WeatherModelDao.class).clone();
        weatherModelDaoConfig.initIdentityScope(type);

        nowInfoDaoConfig = daoConfigMap.get(NowInfoDao.class).clone();
        nowInfoDaoConfig.initIdentityScope(type);

        basicInfoDaoConfig = daoConfigMap.get(BasicInfoDao.class).clone();
        basicInfoDaoConfig.initIdentityScope(type);

        dailyForecastInfoDaoConfig = daoConfigMap.get(DailyForecastInfoDao.class).clone();
        dailyForecastInfoDaoConfig.initIdentityScope(type);

        aqiInfoDaoConfig = daoConfigMap.get(AqiInfoDao.class).clone();
        aqiInfoDaoConfig.initIdentityScope(type);

        warningInfoDaoConfig = daoConfigMap.get(WarningInfoDao.class).clone();
        warningInfoDaoConfig.initIdentityScope(type);

        hourlyForecastInfoDaoConfig = daoConfigMap.get(HourlyForecastInfoDao.class).clone();
        hourlyForecastInfoDaoConfig.initIdentityScope(type);

        suggestionInfoDaoConfig = daoConfigMap.get(SuggestionInfoDao.class).clone();
        suggestionInfoDaoConfig.initIdentityScope(type);

        weatherModelDao = new WeatherModelDao(weatherModelDaoConfig, this);
        nowInfoDao = new NowInfoDao(nowInfoDaoConfig, this);
        basicInfoDao = new BasicInfoDao(basicInfoDaoConfig, this);
        dailyForecastInfoDao = new DailyForecastInfoDao(dailyForecastInfoDaoConfig, this);
        aqiInfoDao = new AqiInfoDao(aqiInfoDaoConfig, this);
        warningInfoDao = new WarningInfoDao(warningInfoDaoConfig, this);
        hourlyForecastInfoDao = new HourlyForecastInfoDao(hourlyForecastInfoDaoConfig, this);
        suggestionInfoDao = new SuggestionInfoDao(suggestionInfoDaoConfig, this);

        registerDao(WeatherModel.class, weatherModelDao);
        registerDao(NowInfo.class, nowInfoDao);
        registerDao(BasicInfo.class, basicInfoDao);
        registerDao(DailyForecastInfo.class, dailyForecastInfoDao);
        registerDao(AqiInfo.class, aqiInfoDao);
        registerDao(WarningInfo.class, warningInfoDao);
        registerDao(HourlyForecastInfo.class, hourlyForecastInfoDao);
        registerDao(SuggestionInfo.class, suggestionInfoDao);
    }
    
    public void clear() {
        weatherModelDaoConfig.clearIdentityScope();
        nowInfoDaoConfig.clearIdentityScope();
        basicInfoDaoConfig.clearIdentityScope();
        dailyForecastInfoDaoConfig.clearIdentityScope();
        aqiInfoDaoConfig.clearIdentityScope();
        warningInfoDaoConfig.clearIdentityScope();
        hourlyForecastInfoDaoConfig.clearIdentityScope();
        suggestionInfoDaoConfig.clearIdentityScope();
    }

    public WeatherModelDao getWeatherModelDao() {
        return weatherModelDao;
    }

    public NowInfoDao getNowInfoDao() {
        return nowInfoDao;
    }

    public BasicInfoDao getBasicInfoDao() {
        return basicInfoDao;
    }

    public DailyForecastInfoDao getDailyForecastInfoDao() {
        return dailyForecastInfoDao;
    }

    public AqiInfoDao getAqiInfoDao() {
        return aqiInfoDao;
    }

    public WarningInfoDao getWarningInfoDao() {
        return warningInfoDao;
    }

    public HourlyForecastInfoDao getHourlyForecastInfoDao() {
        return hourlyForecastInfoDao;
    }

    public SuggestionInfoDao getSuggestionInfoDao() {
        return suggestionInfoDao;
    }

}
